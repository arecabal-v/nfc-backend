name: Deploy to Cloud Run

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: southamerica-east1
  SERVICE: nfc-backend
  REGION: southamerica-east1

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run eslint

      - name: Type check
        run: npm run check-types

      - name: Run tests
        run: npm run test:unit

  deploy:
    # Only run deploy on main branch pushes
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"

      - name: "Use gcloud CLI"
        run: "gcloud info"

      - name: Configure Docker to use gcloud as a credential helper
        run: |-
          gcloud --quiet auth configure-docker \
              $GAR_LOCATION-docker.pkg.dev

      - name: Build and Push Container
        run: |-
          docker build -t "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$SERVICE/$SERVICE:$GITHUB_SHA" ./
          docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$SERVICE/$SERVICE:$GITHUB_SHA"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}
          timeout: 600
          flags: "--allow-unauthenticated --port=8080 --memory=512Mi --cpu=1"
          env_vars: |
            NODE_ENV=production
            MONGO_URL=${{ secrets.MONGO_URL }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
